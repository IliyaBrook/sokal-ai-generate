---
description: 
globs: 
alwaysApply: true
---
project_structure:
  type: monorepo
  package_manager: yarn
  root_module: sokal_ai_generate
  modules:
    - name: backend
      type: nestjs
      database: mongodb
    - name: frontend
      type: nextjs
      version: 15.2.4
      styling: tailwind
    - name: configs
      purpose: shared configurations
    - name: shared-types
      purpose: shared typescript types

technical_requirements:
  node_version: ">=22.0.0 <23.0.0"
  typescript: required
  mongodb: required
  tailwind: required
  docker: required

development_rules:
  code_language: english
  comments: disabled
  types: strict
  shared_types: "@sokal_ai_generate/shared-types"
  shared_configs: "@sokal_ai_generate/configs"
  linting: required
  formatting: required

build_and_run:
  development:
    command: yarn dev
    hot_reload: enabled
  production:
    command: yarn build
    deployment: docker
  linting:
    command: yarn lint
  formatting:
    command: yarn format
  
backend_routes:
  - POST /auth/signup > Регистрация пользователей.
  - POST /auth/login > Аутентификация пользователей и возврат JWT.
  - POST /generate > Принимает ввод (тема, стиль) и вызывает **API OpenAI (или LLM Hugging Face)** для генерации поста блога. не сохраняет в базу просто отдает пользователю то что сгенерировал open ai
  - POST /posts/save > Сохраняет сгенерированный пост в базу данных. с привязкой к id пользователя
  - GET /posts/user > Получает сохраненные посты пользователя.
  - GET /posts/:id > Возвращает один пост для публичного просмотра.

architecture:
  backend:
    framework: nestjs
    structure: modular
  frontend:
    framework: nextjs
    router: app router
  shared_types: required
  shared_configs: required

docker:
  files:
    - Dockerfile
    - docker-compose.yml
  production: required
  ignore_rules: .dockerignore

security:
  secrets: environment_variables
  database: mongodb_best_practices
  production: https_required

testing:
  framework: jest
  coverage: required
  e2e: supported

deployment:
  method: docker
  ci_cd: required
  versioning: required